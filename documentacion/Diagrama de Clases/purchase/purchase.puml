@startuml
package moduloPurchase {
    class PurchaseEntity {
    - id: number
    - amount: number
    - price: number
    - virtual: boolean = false
    - purchaseDate: Date
    + user: User
    + book: Book
    }

    class PurchaseService {
        - purchaseRepository: Repository<Purchase>,
        - cartRepository: Repository<ShoppingCartBook>
        - booksRepository: Repository<Book>
        - userRepository: Repository<User>

        + processPurchase(idUser: number, cartItems: PurchaseItem[]): Promise<void>
        + getPurchaseHistory(idUser: number): Promise<PurchaseDTO[] | null>
        + getAllPurchases(): Promise<PurchaseDTO[]> 
    }

    class PurchaseController {
        -  purchasesService: PurchasesService

        + processPurchase(body: ProcessPurchaseDTO)
        + getPurchaseHistory(idUser: number): Promise<PurchaseDTO[] | null>
        + getAllPurchases(): Promise<PurchaseDTO[]> 
    }

    class PurchaseDTO {
        + id: number
        + id_user: number
        + username: string
        + id_book: number
        + title: string
        + author: string
        + image: string
        + price: number
        + virtual: boolean
        + amount: number
        + purchaseDate: Date

        + PurchaseDTO(props: PurchaseDTOProps)
    }

    interface PurchaseDTOProps {
        id: number,
        id_user: number,
        id_book: number,
        title: string,
        author: string,
        image: string,
        price: number,
        virtual: boolean,
        amount: number,
        purchaseDate: Date,
    }

    class RepositoryP<<Purchase>> {

    }

    class RepositoryC<<Cart>> {

    }

    class RepositoryB<<Book>> {

    }

    class RepositoryU<<User>> {

    }

}

' Relaciones
PurchaseService ..> PurchaseDTO : Devuelve
PurchaseService --> RepositoryP : Depende de
PurchaseService --> RepositoryC : Depende de
PurchaseService --> RepositoryB : Depende de
PurchaseService --> RepositoryU : Depende de
RepositoryP --> PurchaseEntity : Accede a
PurchaseController --> PurchaseService : Depende de

PurchaseDTO ..> PurchaseDTOProps : Usa
@enduml