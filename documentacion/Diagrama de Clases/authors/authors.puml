@startuml
package moduloAuthors {
    class AuthorService {
        - authorRepository: Repository<Author>

        + create(createAuthorDto: CreateAuthorDto): Promise<Author>
        + findAll(): Promise<Author[]>
        + findOne(id: number): Promise<Author>
        + remove(id: number): Promise<void>
    }

    class AuthorController {
        - authorService: AuthorService

        + findAll(): Promise<Author>
        + findOne(id: number)
        + create(createAuthorDto: CreateAuthorDto): Promise<Author>
        + remove(id: number)
    }

    class CreateAuthorDto {
        + name: string;

        + CreateAuthorDto(name: string)
    }

    class AuthorEntity{
        - id: number
        - name: string
    }

    class Repository<<Author>>{

    }
}

' Relaciones
AuthorController --> AuthorService : Depende de
AuthorService ..> CreateAuthorDto : Usa
AuthorService --> Repository : Depende de
Repository --> AuthorEntity : Accede a
@enduml