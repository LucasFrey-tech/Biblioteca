@startuml prueba

'======================
' Entidades
'======================

class BookEntity {
  + id: number
  + title: string
  + authorId: number
}

class AuthorEntity {
  + id: number
  + name: string
}

class GenreEntity {
  + id: number
  + name: string
}

class UserEntity {
  + id: number
  + username: string
  + email: string
}


'======================
' DTOs
'======================

class BookDto {
  + BookDTO2BookEntity(props): Book
  + BookEntity2BookDTO(props): BookDTO
}

class CreateAuthorDto {
  + name: string
}

class CreateGenreDto {
  + name: string
}

class CreateUserDto {
  + username: string
  + email: string
}


'======================
' Services
'======================

class BookService {
  + findOne(id: number): Promise<BookDTO | null>
  + create(bookDTO: BookDTO)
  + update(id: number, bookDTO: BookDTO)
  + delete(id: number)
  + bookImageUrl = (imageName:string):string
}

class AuthorService {
  + create(dto: CreateAuthorDto)
  + findAll()
}

class GenreService {
  + create(dto: CreateGenreDto)
  + findAll()
}

class UserService {
  + create(dto: CreateUserDto)
  + findAll()
}


'======================
' Controllers
'======================

class BookController {
  + POST /books
  + GET /books
  + GET /books/:id
  + PUT /books/:id
  + DELETE /books/:id
}

class AuthorController {
  + POST /authors
  + GET /authors
}

class GenreController {
  + POST /genres
  + GET /genres
}

class UserController {
  + POST /users
  + GET /users
}

'======================
' Parte con AppModule corto (faltan agregar mas imports y relaciones.).

' class AppModule {
'   + imports: BookModule, AuthorModule, GenreModule, UserModule
' }

' AppModule --> BookModule
' AppModule --> AuthorModule
' AppModule --> GenreModule
' AppModule --> UserModule
' '======================


'======================
' Parte con AppModule completo.
' Como podemos apreciar el diagrama (y cuando probamos generar el png tambien) el diagrama queda dificil de leeer.

' class AppModule {
'     + imports: AuthModule, UsersModule, AuthorModule, BooksModule, BookReviewsModule, GenresModule, BookGenresModule, ShoppingCartModule, CatalogueBooksModule, PurchasesModule, LibraryBooksModule, BookContentModule
' }

' AppModule --> AuthModule
' AppModule --> UsersModule
' AppModule --> AuthorModule
' AppModule --> BooksModule
' AppModule --> BookReviewsModule
' AppModule --> GenresModule
' AppModule --> BookGenresModule
' AppModule --> ShoppingCartModule
' AppModule --> CatalogueBooksModule
' AppModule --> PurchasesModule
' AppModule --> LibraryBooksModule
' AppModule --> BookContentModule

'======================


'======================
' Relaciones
'======================

BookController --> BookService
BookService --> BookEntity
BookService --> BookDto
BookService --> UpdateBookDto

AuthorController --> AuthorService
AuthorService --> AuthorEntity
AuthorService --> CreateAuthorDto

GenreController --> GenreService
GenreService --> GenreEntity
GenreService --> CreateGenreDto

UserController --> UserService
UserService --> UserEntity
UserService --> CreateUserDto

AuthController --> AuthService
AuthService --> AuthEntity
AuthService --> CreateAuthDto


BookService --> GenreService : genreId
BookService --> AuthorService : authorId


@enduml
